用語:
  変数ヘッダ: 数値またはインスタンスへのポインタで、rbpから連続に並んでいる

レジスタ用途:
  rax:返り値・コンストラクターの場合thisのアドレス(rbp)
  r10 代入先インスタンスのヘッドアドレスを保存
  r11 代入元インスタンスのヘッドアドレスを保存
  r12 rbpから続く、変数用の領域の最後のアドレス(関数呼び出し前後で保存される)

in-out:
  constructor:thisのアドレス(rbx)-スタックトップ
  topFun:無し-無し
  inClassFun:無し-無し
  topFunCall:引数(rdi,...)-戻り値(rax)
  inClassFunCall:thisのアドレス(rbx)-戻り値(rax)
  dot:無し-無し
  assign:スタック2つ-呼び出し時のスタックトップ
  return:スタック1つ-無し

fun,classノードのvalListは空

オフセット:
　関数: 引数　+ ローカル変数
　  インスタンス: コンストラクタ　+ メンバ変数

例:
  rbp
  引数a
  引数b:B = B() (ポインタ -> B1.m1)
  ローカル変数c
  ローカル変数d:D = D()(ポインタ -> D1.コンストラクタ1)
  ローカル変数E:E = E()(ポインタ -> E1.d)
  B1.m1
  B1.m2
  B1.m3
  D1.コンストラクタ1
  D1.コンストラクタ2
  D1.m3
  D1.m4
  E1.d: D = D() (ポインタ　-> D2.コンストラクタ1)
  D2.コンストラクタ1
  D2.コンストラクタ2
  D2.m3
  D2.m4

//TODO: Type記法の導入(変数)
//TODO: 返り値にオブジェクト
//TODO: クラスコール直呼び







